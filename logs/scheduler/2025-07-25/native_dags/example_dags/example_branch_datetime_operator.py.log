[2025-07-25T15:32:21.340+0700] {processor.py:161} INFO - Started process (PID=7132) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:32:21.341+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:32:21.342+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:32:21.342+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:32:21.353+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:32:21.485+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:32:21.485+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:32:21.647+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:32:21.647+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:32:21.652+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:32:21.652+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:32:21.654+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:32:21.654+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:32:21.675+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 0.338 seconds
[2025-07-25T15:33:33.469+0700] {processor.py:161} INFO - Started process (PID=7214) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:33:33.472+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:33:33.473+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:33:33.473+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:33:33.479+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:33:33.494+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:33:33.494+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:33:33.507+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:33:33.507+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:33:33.510+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:33:33.510+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:33:33.511+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:33:33.511+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:33:33.527+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 0.060 seconds
[2025-07-25T15:34:43.995+0700] {processor.py:161} INFO - Started process (PID=7310) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:34:43.998+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:34:43.998+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:34:43.998+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:34:44.006+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:34:44.022+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:34:44.022+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:34:44.036+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:34:44.036+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:34:44.040+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:34:44.040+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:34:44.041+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:34:44.041+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:34:44.058+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 0.065 seconds
[2025-07-25T15:35:49.014+0700] {processor.py:161} INFO - Started process (PID=7382) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:35:49.015+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:35:49.016+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:35:49.015+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:35:49.023+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:35:49.037+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:35:49.037+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:35:49.050+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:35:49.050+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:35:49.053+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:35:49.053+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:35:49.055+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:35:49.055+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:35:49.071+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 0.059 seconds
[2025-07-25T15:42:03.494+0700] {processor.py:161} INFO - Started process (PID=7860) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:42:03.495+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:42:03.496+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:03.495+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:42:03.504+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:42:05.302+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:05.302+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator_2
[2025-07-25T15:42:05.752+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:05.752+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator_2
[2025-07-25T15:42:06.132+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:06.132+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator_2
[2025-07-25T15:42:06.944+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:06.944+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator
[2025-07-25T15:42:07.408+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:07.408+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator
[2025-07-25T15:42:07.851+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:07.850+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator
[2025-07-25T15:42:08.857+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:08.856+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator_3
[2025-07-25T15:42:09.291+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.291+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator_3
[2025-07-25T15:42:09.733+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.732+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator_3
[2025-07-25T15:42:09.734+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.733+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:42:09.887+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.887+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator_2
[2025-07-25T15:42:09.888+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.888+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator
[2025-07-25T15:42:09.888+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:09.888+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator_3
[2025-07-25T15:42:10.005+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:10.005+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:42:10.007+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:10.007+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:42:10.008+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:42:10.008+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:42:10.786+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 7.295 seconds
[2025-07-25T15:56:02.440+0700] {processor.py:161} INFO - Started process (PID=8477) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:56:02.441+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:56:02.442+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:02.442+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:56:02.448+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:56:04.390+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:04.389+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator_2
[2025-07-25T15:56:04.821+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:04.821+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator_2
[2025-07-25T15:56:05.256+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:05.256+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator_2
[2025-07-25T15:56:06.101+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:06.100+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator
[2025-07-25T15:56:06.729+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:06.728+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator
[2025-07-25T15:56:07.164+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:07.164+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator
[2025-07-25T15:56:08.030+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:08.029+0700] {override.py:1769} INFO - Created Permission View: can edit on DAG:example_branch_datetime_operator_3
[2025-07-25T15:56:08.489+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:08.488+0700] {override.py:1769} INFO - Created Permission View: can read on DAG:example_branch_datetime_operator_3
[2025-07-25T15:56:09.047+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.044+0700] {override.py:1769} INFO - Created Permission View: can delete on DAG:example_branch_datetime_operator_3
[2025-07-25T15:56:09.047+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.047+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:56:09.216+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.215+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator_2
[2025-07-25T15:56:09.217+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.217+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator_3
[2025-07-25T15:56:09.217+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.217+0700] {dag.py:3058} INFO - Creating ORM DAG for example_branch_datetime_operator
[2025-07-25T15:56:09.345+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.345+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:56:09.347+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.347+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:56:09.348+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:56:09.348+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:56:10.526+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 8.088 seconds
[2025-07-25T15:59:12.177+0700] {processor.py:161} INFO - Started process (PID=9030) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:59:12.178+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T15:59:12.178+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:59:12.178+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:59:12.186+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T15:59:13.537+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:59:13.537+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T15:59:13.723+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:59:13.722+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:59:13.779+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:59:13.779+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:59:13.837+0700] {logging_mixin.py:188} INFO - [2025-07-25T15:59:13.837+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T15:59:17.280+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.529 seconds
[2025-07-25T16:03:32.497+0700] {processor.py:161} INFO - Started process (PID=9777) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:03:32.498+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:03:32.499+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:03:32.498+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:03:32.506+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:03:33.823+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:03:33.823+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:03:33.981+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:03:33.981+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:03:34.028+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:03:34.027+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:03:34.078+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:03:34.078+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:03:34.886+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.391 seconds
[2025-07-25T16:05:10.466+0700] {processor.py:161} INFO - Started process (PID=10126) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:05:10.468+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:05:10.468+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:05:10.468+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:05:10.478+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:05:12.886+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:05:12.886+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:05:13.068+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:05:13.068+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:05:13.123+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:05:13.123+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:05:13.173+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:05:13.173+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:05:14.007+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.544 seconds
[2025-07-25T16:06:42.082+0700] {processor.py:161} INFO - Started process (PID=10423) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:06:42.085+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:06:42.086+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:06:42.086+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:06:42.093+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:06:43.678+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:06:43.677+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:06:43.927+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:06:43.926+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:06:43.987+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:06:43.987+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:06:44.043+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:06:44.042+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:06:44.995+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.915 seconds
[2025-07-25T16:08:24.022+0700] {processor.py:161} INFO - Started process (PID=10743) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:08:24.023+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:08:24.024+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:08:24.023+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:08:24.031+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:08:25.219+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:08:25.218+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:08:25.359+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:08:25.358+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:08:25.404+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:08:25.403+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:08:25.444+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:08:25.444+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:08:26.120+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.101 seconds
[2025-07-25T16:09:57.929+0700] {processor.py:161} INFO - Started process (PID=11179) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:09:57.931+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:09:57.932+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:09:57.932+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:09:57.945+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:09:59.485+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:09:59.484+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:09:59.792+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:09:59.791+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:09:59.882+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:09:59.881+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:09:59.939+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:09:59.939+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:10:01.973+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.050 seconds
[2025-07-25T16:11:14.011+0700] {processor.py:161} INFO - Started process (PID=11414) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:14.012+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:11:14.013+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:14.012+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:14.021+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:15.894+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:15.893+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:11:16.084+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:16.084+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:16.133+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:16.133+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:16.174+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:16.174+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:16.893+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.885 seconds
[2025-07-25T16:11:34.445+0700] {processor.py:161} INFO - Started process (PID=11463) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:34.446+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:11:34.447+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:34.446+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:34.463+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:11:37.005+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:37.005+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:11:37.209+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:37.208+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:37.285+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:37.285+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:37.361+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:11:37.361+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:11:38.343+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.903 seconds
[2025-07-25T16:13:01.200+0700] {processor.py:161} INFO - Started process (PID=11749) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:01.212+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:13:01.213+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:01.213+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:01.258+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:04.736+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:04.735+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:13:04.897+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:04.897+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:04.948+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:04.948+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:04.995+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:04.995+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:05.824+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.639 seconds
[2025-07-25T16:13:09.460+0700] {processor.py:161} INFO - Started process (PID=11758) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:09.461+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:13:09.462+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:09.461+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:09.477+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:13:13.249+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:13.248+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:13:13.446+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:13.445+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:13.497+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:13.497+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:13.555+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:13:13.554+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:13:14.406+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.679 seconds
[2025-07-25T16:14:47.248+0700] {processor.py:161} INFO - Started process (PID=12058) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:47.250+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:14:47.251+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:47.250+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:47.260+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:47.618+0700] {processor.py:161} INFO - Started process (PID=12059) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:47.619+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:14:47.619+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:47.619+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:47.628+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:14:51.972+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:51.972+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:14:52.159+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.158+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:52.204+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.203+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:52.252+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.252+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:52.402+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.402+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:14:52.694+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.693+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:52.747+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.747+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:52.794+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:52.794+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:14:53.147+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.902 seconds
[2025-07-25T16:14:53.420+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:53.418+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 48, 705783, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 49, 359795, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 51, 868838, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:14:53.420+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:53.420+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 48, 705783, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 49, 359795, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 51, 868838, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:14:53.421+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:53.421+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 48, 705783, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 49, 359795, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 51, 868838, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:14:53.421+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:14:53.421+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:14:53.422+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 48, 705783, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 49, 359795, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 14, 51, 868838, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:16:18.767+0700] {processor.py:161} INFO - Started process (PID=12233) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:18.770+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:16:18.771+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:18.770+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:18.782+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:20.048+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:20.048+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:16:20.296+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:20.296+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:20.343+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:20.343+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:20.389+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:20.389+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:21.342+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.578 seconds
[2025-07-25T16:16:22.750+0700] {processor.py:161} INFO - Started process (PID=12242) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:22.751+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:16:22.752+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:22.752+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:22.758+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:16:25.076+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:25.075+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:16:25.243+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:25.242+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:25.293+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:25.293+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:25.353+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:16:25.352+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:16:26.172+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.426 seconds
[2025-07-25T16:18:01.400+0700] {processor.py:161} INFO - Started process (PID=12425) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:01.401+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:18:01.401+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:01.401+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:01.413+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:01.544+0700] {processor.py:161} INFO - Started process (PID=12426) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:01.545+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:18:01.545+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:01.545+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:01.552+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:18:07.208+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:07.208+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:18:08.090+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:08.090+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:08.423+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:08.423+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:08.665+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:08.665+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:18:08.748+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:08.748+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:09.550+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:09.550+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:09.613+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:09.613+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:09.697+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:09.696+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:18:10.206+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 8.809 seconds
[2025-07-25T16:18:10.231+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:10.230+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 2, 801720, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 3, 692517, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 5, 597152, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:18:10.232+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:10.232+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 2, 801720, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 3, 692517, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 5, 597152, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:18:10.233+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:10.233+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 2, 801720, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 3, 692517, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 5, 597152, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:18:10.233+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:18:10.233+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:18:10.234+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 2, 801720, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 3, 692517, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 18, 5, 597152, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:19:41.109+0700] {processor.py:161} INFO - Started process (PID=12595) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:41.110+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:19:41.111+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:41.110+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:41.118+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:41.496+0700] {processor.py:161} INFO - Started process (PID=12596) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:41.497+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:19:41.498+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:41.497+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:41.509+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:19:44.793+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:44.793+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:19:44.959+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:44.958+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.015+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.015+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.066+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.066+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.275+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.275+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:19:45.469+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.468+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.533+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.533+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.589+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:45.588+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:19:45.984+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.878 seconds
[2025-07-25T16:19:46.362+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:46.359+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 68427, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 758485, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 44, 701838, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:19:46.364+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:46.363+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 68427, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 758485, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 44, 701838, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:19:46.365+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:46.364+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 68427, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 758485, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 44, 701838, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:19:46.365+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:19:46.365+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:19:46.366+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 68427, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 43, 758485, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 19, 44, 701838, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:21:09.512+0700] {processor.py:161} INFO - Started process (PID=12756) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:09.515+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:21:09.516+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:09.516+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:09.524+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:10.821+0700] {processor.py:161} INFO - Started process (PID=12758) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:10.822+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:21:10.822+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:10.822+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:10.830+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:21:11.296+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:11.296+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:21:11.489+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:11.489+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:11.561+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:11.561+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:11.651+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:11.651+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:12.422+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:12.421+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:21:12.616+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:12.616+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:12.631+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.122 seconds
[2025-07-25T16:21:12.674+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:12.673+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:12.733+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:21:12.732+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:21:13.702+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.883 seconds
[2025-07-25T16:22:53.882+0700] {processor.py:161} INFO - Started process (PID=12928) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:53.883+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:22:53.884+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:53.884+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:53.891+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:54.471+0700] {processor.py:161} INFO - Started process (PID=12929) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:54.472+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:22:54.472+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:54.472+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:54.480+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:22:57.151+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.151+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:22:57.378+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.378+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:57.437+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.437+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:57.494+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.493+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:57.765+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.765+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:22:57.984+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:57.984+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:58.044+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.044+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:58.153+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.153+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:22:58.505+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.626 seconds
[2025-07-25T16:22:58.637+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.636+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 55, 686763, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 56, 408495, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 57, 113808, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:22:58.638+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.637+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 55, 686763, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 56, 408495, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 57, 113808, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:22:58.639+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.638+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 55, 686763, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 56, 408495, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 57, 113808, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:22:58.639+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:22:58.639+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:22:58.639+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 55, 686763, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 56, 408495, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 22, 57, 113808, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:25:22.554+0700] {processor.py:161} INFO - Started process (PID=13154) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:22.555+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:25:22.555+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:22.555+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:22.563+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:23.649+0700] {processor.py:161} INFO - Started process (PID=13155) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:23.650+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:25:23.651+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:23.650+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:23.659+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:25:25.378+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:25.378+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:25:25.541+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:25.540+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:25.589+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:25.588+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:25.638+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:25.638+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:25.907+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:25.907+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:25:26.070+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.070+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:26.117+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.117+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:26.164+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.164+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:25:26.464+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.913 seconds
[2025-07-25T16:25:26.842+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.840+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 24, 721419, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 25, 355191, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:25:26.843+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.842+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 24, 721419, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 25, 355191, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:25:26.843+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.843+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 24, 721419, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 25, 355191, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:25:26.844+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:25:26.844+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:25:26.844+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 24, 721419, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 25, 25, 355191, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:27:04.573+0700] {processor.py:161} INFO - Started process (PID=13315) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:04.574+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:27:04.574+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:04.574+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:04.581+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:07.375+0700] {processor.py:161} INFO - Started process (PID=13319) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:07.376+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:27:07.377+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:07.376+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:07.388+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:27:08.071+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:08.070+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:27:08.280+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:08.279+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:08.347+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:08.346+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:08.412+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:08.412+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:09.774+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.204 seconds
[2025-07-25T16:27:09.875+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:09.874+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:27:10.098+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:10.098+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:10.210+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:10.210+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:10.286+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:27:10.286+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:27:11.264+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.893 seconds
[2025-07-25T16:29:22.279+0700] {processor.py:161} INFO - Started process (PID=13519) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:22.281+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:29:22.281+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:22.281+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:22.290+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:25.468+0700] {processor.py:161} INFO - Started process (PID=13524) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:25.471+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:29:25.472+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:25.471+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:25.481+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:29:26.174+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:26.174+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:29:26.454+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:26.453+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:26.544+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:26.544+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:26.635+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:26.635+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:27.301+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:27.300+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:29:27.461+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:27.460+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:27.507+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:27.507+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:27.550+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:27.549+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:29:28.152+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:28.151+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 29, 26, 544228, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:29:28.153+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:28.153+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 29, 26, 544228, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:29:28.154+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:28.154+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 29, 26, 544228, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:29:28.154+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:29:28.154+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:29:28.155+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 29, 26, 544228, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:29:29.419+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 7.143 seconds
[2025-07-25T16:31:12.092+0700] {processor.py:161} INFO - Started process (PID=13701) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:12.093+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:31:12.094+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:12.094+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:12.102+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:13.530+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:13.529+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:31:13.717+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:13.717+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:13.773+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:13.773+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:13.825+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:13.825+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:14.723+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.633 seconds
[2025-07-25T16:31:19.040+0700] {processor.py:161} INFO - Started process (PID=13710) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:19.041+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:31:19.042+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:19.042+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:19.049+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:31:20.555+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:20.555+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:31:20.755+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:20.754+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:20.820+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:20.819+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:20.876+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:31:20.875+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:31:21.832+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.795 seconds
[2025-07-25T16:33:24.164+0700] {processor.py:161} INFO - Started process (PID=13892) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:24.167+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:33:24.168+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:24.167+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:24.178+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:24.983+0700] {processor.py:161} INFO - Started process (PID=13893) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:24.984+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:33:24.984+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:24.984+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:24.992+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:33:27.876+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:27.876+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:33:28.053+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.053+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.109+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.108+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.153+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.153+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.189+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.189+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:33:28.505+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.505+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.559+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.559+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.607+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:28.607+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:33:28.982+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.821 seconds
[2025-07-25T16:33:29.331+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:29.329+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 239397, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 970232, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 27, 565490, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:33:29.332+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:29.331+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 239397, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 970232, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 27, 565490, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:33:29.333+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:29.332+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 239397, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 970232, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 27, 565490, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:33:29.333+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:33:29.333+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:33:29.333+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 239397, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 26, 970232, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 33, 27, 565490, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:35:03.204+0700] {processor.py:161} INFO - Started process (PID=14052) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:03.205+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:35:03.206+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:03.206+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:03.213+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:04.174+0700] {processor.py:161} INFO - Started process (PID=14058) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:04.175+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:35:04.176+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:04.176+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:04.185+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:35:06.341+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:06.341+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:35:06.517+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:06.517+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:06.576+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:06.575+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:06.628+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:06.628+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:06.982+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:06.981+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:35:07.182+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.181+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:07.244+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.244+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:07.303+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.303+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:35:07.550+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.350 seconds
[2025-07-25T16:35:07.725+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.722+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 5, 466665, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 6, 246281, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:35:07.726+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.726+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 5, 466665, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 6, 246281, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:35:07.727+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.727+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 5, 466665, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 6, 246281, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:35:07.727+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:35:07.727+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:35:07.728+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 5, 466665, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 35, 6, 246281, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:36:35.321+0700] {processor.py:161} INFO - Started process (PID=14205) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:35.322+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:36:35.322+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:35.322+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:35.329+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:37.125+0700] {processor.py:161} INFO - Started process (PID=14207) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:37.125+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:36:37.126+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:37.126+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:37.134+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:36:37.516+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:37.516+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:36:37.688+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:37.687+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:37.738+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:37.737+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:37.785+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:37.784+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:38.480+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:38.479+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:36:38.553+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.235 seconds
[2025-07-25T16:36:38.651+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:38.651+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:38.705+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:38.705+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:38.790+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:36:38.790+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:36:39.805+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.684 seconds
[2025-07-25T16:38:18.218+0700] {processor.py:161} INFO - Started process (PID=14376) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:18.219+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:38:18.220+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:18.220+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:18.228+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:18.788+0700] {processor.py:161} INFO - Started process (PID=14378) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:18.788+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:38:18.789+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:18.789+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:18.798+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:38:22.686+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:22.685+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:38:22.748+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:22.747+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:38:22.938+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:22.937+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:22.994+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:22.994+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:23.055+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.055+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:23.487+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.487+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:23.537+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.536+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:23.586+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.586+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:38:23.827+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.826+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 19156, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 641925, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 22, 211551, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:38:23.828+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.828+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 19156, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 641925, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 22, 211551, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:38:23.829+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.828+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 19156, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 641925, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 22, 211551, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:38:23.829+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:38:23.829+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:38:23.830+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_2) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 19156, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 21, 641925, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 38, 22, 211551, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:38:24.100+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.885 seconds
[2025-07-25T16:39:53.981+0700] {processor.py:161} INFO - Started process (PID=14541) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:53.982+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:39:53.983+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:53.983+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:53.991+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:54.238+0700] {processor.py:161} INFO - Started process (PID=14542) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:54.239+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:39:54.239+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:54.239+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:54.247+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:39:56.719+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:56.719+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:39:56.877+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:56.876+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:56.923+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:56.923+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:56.969+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:56.969+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:56.975+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:56.975+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:39:57.307+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:57.307+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:57.354+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:57.353+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:57.407+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:57.407+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:39:57.787+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.808 seconds
[2025-07-25T16:39:58.051+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:58.050+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 275247, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 925606, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 56, 493804, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:39:58.052+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:58.052+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 275247, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 925606, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 56, 493804, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:39:58.053+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:58.053+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 275247, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 925606, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 56, 493804, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:39:58.054+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:39:58.054+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:39:58.054+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1876 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 275247, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 55, 925606, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"start_date": 1609459200.0, "fileloc": "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/e ... (1878 characters truncated) ... e, "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 39, 56, 493804, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:41:15.626+0700] {processor.py:161} INFO - Started process (PID=14685) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:15.629+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:41:15.630+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:15.630+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:15.637+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:18.258+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:18.258+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:41:18.519+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:18.518+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:18.587+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:18.587+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:18.651+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:18.651+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:19.848+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.225 seconds
[2025-07-25T16:41:24.662+0700] {processor.py:161} INFO - Started process (PID=14699) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:24.663+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:41:24.663+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:24.663+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:24.673+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:41:26.285+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:26.285+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:41:26.485+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:26.485+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:26.552+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:26.552+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:26.611+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:41:26.611+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:41:27.778+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.119 seconds
[2025-07-25T16:43:04.143+0700] {processor.py:161} INFO - Started process (PID=14862) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:04.145+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:43:04.145+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:04.145+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:04.152+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:07.377+0700] {processor.py:161} INFO - Started process (PID=14871) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:07.377+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:43:07.378+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:07.378+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:07.386+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:43:07.467+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:07.467+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:43:07.716+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:07.715+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:07.797+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:07.796+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:07.878+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:07.878+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:08.478+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:08.478+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:43:08.632+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:08.632+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:08.681+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:08.681+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:08.726+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:43:08.726+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:43:09.088+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.947 seconds
[2025-07-25T16:43:09.500+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.127 seconds
[2025-07-25T16:44:45.692+0700] {processor.py:161} INFO - Started process (PID=15049) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:45.696+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:44:45.697+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:45.697+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:45.718+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:45.722+0700] {processor.py:161} INFO - Started process (PID=15050) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:45.723+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:44:45.724+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:45.723+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:45.737+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:44:48.660+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:48.660+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:44:48.855+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:48.855+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:48.901+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:48.900+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:44:48.903+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:48.903+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:48.952+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:48.951+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:49.326+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.325+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:49.387+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.386+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:49.441+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.441+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:44:49.771+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.053 seconds
[2025-07-25T16:44:49.783+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.778+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 46, 841837, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 47, 601673, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 48, 220547, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:44:49.787+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.785+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 46, 841837, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 47, 601673, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 48, 220547, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:44:49.790+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.789+0700] {dagbag.py:647} ERROR - Failed to write serialized DAG: /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 635, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/serialized_dag.py", line 157, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 46, 841837, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 47, 601673, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 48, 220547, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:44:49.793+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:44:49.793+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:44:49.795+0700] {processor.py:186} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 182, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 163, in _handle_dag_file_processing
    result: tuple[int, int] = dag_file_processor.process_file(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 859, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/api_internal/internal_api_call.py", line 114, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 79, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/dag_processing/processor.py", line 895, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 657, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 347, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/tenacity/__init__.py", line 314, in iter
    return fut.result()
           ^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dagbag.py", line 673, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/models/dag.py", line 3048, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "serialized_dag_pkey"
DETAIL:  Key (dag_id)=(example_branch_datetime_operator_3) already exists.

[SQL: INSERT INTO serialized_dag (dag_id, fileloc, fileloc_hash, data, data_compressed, last_updated, dag_hash, processor_subdir) VALUES (%(dag_id)s, %(fileloc)s, %(fileloc_hash)s, %(data)s, %(data_compressed)s, %(last_updated)s, %(dag_hash)s, %(processor_subdir)s)]
[parameters: ({'dag_id': 'example_branch_datetime_operator_3', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_3", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 46, 841837, tzinfo=Timezone('UTC')), 'dag_hash': '7e7a19815a34862d05a8b2ec96abf213', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator", "_task_group": {"_group_id": null, "prefix_group_id": tr ... (1876 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 47, 601673, tzinfo=Timezone('UTC')), 'dag_hash': '5f3f44832370bdb49670e2939a1843a5', 'processor_subdir': '/home/ngtph/airflow/dags'}, {'dag_id': 'example_branch_datetime_operator_2', 'fileloc': '/home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py', 'fileloc_hash': 18863904794384486, 'data': '{"__version": 1, "dag": {"tags": ["example"], "_dag_id": "example_branch_datetime_operator_2", "_task_group": {"_group_id": null, "prefix_group_id":  ... (1878 characters truncated) ... ], "_task_type": "BranchDateTimeOperator", "_task_module": "airflow.operators.datetime", "_is_empty": false}], "dag_dependencies": [], "params": {}}}', 'data_compressed': None, 'last_updated': datetime.datetime(2025, 7, 25, 9, 44, 48, 220547, tzinfo=Timezone('UTC')), 'dag_hash': 'c8dfb6d4c3653cd2bd5591ae8fccd7e4', 'processor_subdir': '/home/ngtph/airflow/dags'})]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2025-07-25T16:46:29.074+0700] {processor.py:161} INFO - Started process (PID=15159) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:46:29.077+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:46:29.080+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:46:29.079+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:46:29.113+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:46:30.555+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:46:30.555+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:46:30.748+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:46:30.748+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:46:30.806+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:46:30.806+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:46:30.862+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:46:30.861+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:46:32.216+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.153 seconds
[2025-07-25T16:49:01.871+0700] {processor.py:161} INFO - Started process (PID=15289) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:49:01.872+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:49:01.873+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:49:01.873+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:49:01.891+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:49:06.297+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:49:06.296+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:49:06.601+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:49:06.601+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:49:06.661+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:49:06.660+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:49:06.716+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:49:06.715+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:49:08.037+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 6.172 seconds
[2025-07-25T16:51:20.229+0700] {processor.py:161} INFO - Started process (PID=15421) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:51:20.232+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:51:20.234+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:51:20.234+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:51:20.258+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:51:23.099+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:51:23.099+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:51:23.300+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:51:23.299+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:51:23.359+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:51:23.359+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:51:23.412+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:51:23.412+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:51:24.285+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.066 seconds
[2025-07-25T16:54:13.652+0700] {processor.py:161} INFO - Started process (PID=15554) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:54:13.657+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:54:13.659+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:54:13.659+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:54:13.683+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:54:19.380+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:54:19.379+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:54:19.742+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:54:19.741+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:54:19.864+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:54:19.864+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:54:19.959+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:54:19.959+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:54:21.640+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 7.998 seconds
[2025-07-25T16:56:33.710+0700] {processor.py:161} INFO - Started process (PID=15707) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:56:33.712+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:56:33.714+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:56:33.713+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:56:33.734+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:56:35.230+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:56:35.229+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:56:35.490+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:56:35.490+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:56:35.544+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:56:35.543+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:56:35.593+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:56:35.593+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:56:36.738+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 3.036 seconds
[2025-07-25T16:58:42.786+0700] {processor.py:161} INFO - Started process (PID=15870) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:58:42.788+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T16:58:42.790+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:58:42.789+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:58:42.813+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T16:58:46.585+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:58:46.584+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T16:58:46.760+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:58:46.759+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:58:46.809+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:58:46.808+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:58:46.854+0700] {logging_mixin.py:188} INFO - [2025-07-25T16:58:46.854+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T16:58:47.706+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.926 seconds
[2025-07-25T17:00:45.824+0700] {processor.py:161} INFO - Started process (PID=16007) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:00:45.826+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:00:45.827+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:00:45.827+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:00:45.838+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:00:47.311+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:00:47.311+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:00:47.479+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:00:47.478+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:00:47.529+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:00:47.528+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:00:47.575+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:00:47.574+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:00:48.335+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 2.519 seconds
[2025-07-25T17:02:30.515+0700] {processor.py:161} INFO - Started process (PID=16107) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:02:30.518+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:02:30.519+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:02:30.519+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:02:30.531+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:02:34.351+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:02:34.350+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:02:34.554+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:02:34.554+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:02:34.615+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:02:34.615+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:02:34.674+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:02:34.674+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:02:35.926+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.419 seconds
[2025-07-25T17:04:52.327+0700] {processor.py:161} INFO - Started process (PID=16267) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:04:52.330+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:04:52.332+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:04:52.331+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:04:52.363+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:04:56.118+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:04:56.117+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:04:56.305+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:04:56.305+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:04:56.361+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:04:56.361+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:04:56.415+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:04:56.414+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:04:57.351+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.035 seconds
[2025-07-25T17:07:39.452+0700] {processor.py:161} INFO - Started process (PID=16432) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:07:39.455+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:07:39.457+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:07:39.456+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:07:39.491+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:07:43.575+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:07:43.574+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:07:43.795+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:07:43.794+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:07:43.861+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:07:43.861+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:07:43.925+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:07:43.924+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:07:44.987+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.545 seconds
[2025-07-25T17:09:54.352+0700] {processor.py:161} INFO - Started process (PID=16573) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:09:54.354+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:09:54.357+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:09:54.357+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:09:54.379+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:09:57.928+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:09:57.927+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:09:58.137+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:09:58.136+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:09:58.203+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:09:58.203+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:09:58.263+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:09:58.263+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:09:59.385+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 5.044 seconds
[2025-07-25T17:11:58.903+0700] {processor.py:161} INFO - Started process (PID=16710) to work on /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:11:58.907+0700] {processor.py:830} INFO - Processing file /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py for tasks to queue
[2025-07-25T17:11:58.908+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:11:58.908+0700] {dagbag.py:538} INFO - Filling up the DagBag from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:11:58.920+0700] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3' retrieved from /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py
[2025-07-25T17:12:01.949+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:12:01.948+0700] {dag.py:3036} INFO - Sync 3 DAGs
[2025-07-25T17:12:02.126+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:12:02.126+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:12:02.177+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:12:02.176+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:12:02.226+0700] {logging_mixin.py:188} INFO - [2025-07-25T17:12:02.225+0700] {dag.py:3823} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-07-24 00:00:00+00:00, run_after=2025-07-25 00:00:00+00:00
[2025-07-25T17:12:03.020+0700] {processor.py:183} INFO - Processing /home/ngtph/airflow/airflow_venv/lib/python3.11/site-packages/airflow/example_dags/example_branch_datetime_operator.py took 4.125 seconds
